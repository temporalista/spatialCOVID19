knitr::opts_chunk$set(echo = TRUE, eval = T)
#La primera vez es necesario tener instalado odin y  devtools antes de iniciar la instalación de squire.
# Además se necesita tener instalado RTOOLS
# install.packages("odin")
# install.packages("devtools")
# devtools::install_github("mrc-ide/squire")
options(scipen=999)
# setwd("G:/My Drive/geo/Ecuador/covid19/SEEIR Cuenca/")
library(squire)
library(socialmixr)
library(plot.matrix)
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
# devtools::update_packages("squire")
knitr::include_graphics("resources/Explicit_Healthcare_Model_Structure.JPG")
knitr::include_graphics("resources/Explicit_Healthcare_Model_Structure.JPG")
knitr::include_graphics("resources/Explicit_Healthcare_Oxygen_Decision_Tree.JPG")
popec <- get_population("Ecuador",simple_SEIR = F)
popec
d0 <- as.Date("2020/03/01")
mec1 <- run_explicit_SEEIR_model(population = popec$n,
contact_matrix_set = cm2 <- get_mixing_matrix("Ecuador"),
time_period = 120,
# R0=3,
# beta_set=0.1,
# replicates = 100,
day_return = T,
seeding_cases = 10
)
mec1
mec1
mec1
mec1$output
plot(mec1,x_var = "date" , date_0 =d0 )
plot(mec1, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mec1, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mec1, var_select = c("deaths"), x_var = "date" , date_0 =d0, summarise = T)
plot(mec1, var_select = "D", x_var = "date" , date_0 =d0, summarise = T)
cm1 <- get_mixing_matrix("Ecuador")
cm1
plot(cm1,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de Ecuador",
sub="Datos del paquete 'squire'"
)
plot(cm3,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de España"
)
plot(cm1,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de Ecuador",
sub="Datos del paquete 'squire'"
)
peru_survey <- readRDS("precomputed/peru.rds")
peru_survey
cmt <- contact_matrix(survey=peru_survey,
survey.pop="Peru",
age.limits = seq(0,80,5),
bootstrap=1000,
split = T,
symmetric=T,
)
cm2 <- (cmt$matrix)
colnames(cm2) <- cmt$participants$age.group
rownames(cm2) <- cmt$participants$age.group
plot(cm2,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos de Perú",
sub= "Grijalva et al. 2020, https://doi.org/10.5281/zenodo.1095664"
)
# 3 Matriz de contactos de España
cm3 <- get_mixing_matrix("Spain")
plot(cm3,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de España"
)
#selecciona una matriz y calcula la matriz simétrica utilizando el valor más alto de cada interacción
cms <- cm1
cm <- pmax(cms, t(cms))
cm
plot(cm,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos seleccionada (simétrica)"
)
cm
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
pop
pobc2020 <-pos.cue$canton_poblacion[1]
pobc2020
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
cm1 <- get_mixing_matrix("Ecuador")
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
pop
pobc2020 <-pos.cue$canton_poblacion[1]
pobcue <- as.integer(pop$n/sum(pop$n) * pobc2020)
pop
#poblacion de cuenca 2020
pob2020 <- read.csv("inputs/proy_pob_canton.csv")
pob2020
pobc2020 <- pob2020[pob2020$dpa_canton=="0101","p2020"]
pobc2020
pobcue <- as.integer(pop$n/sum(pop$n) * pobc2020)
pobcue
#capacidad hospitalaria
hospbed = 80
ucibed = 32
# fecha asumida de inicio, solamente para la representación gráfica
d0 <- as.Date("2020-03-14")
mb <- run_explicit_SEEIR_model(population = as.integer(pobcue),
contact_matrix_set = cm,
time_period = 90,
# R0=3,
# beta_set=0.1,
# replicates = 100,
day_return = T,
hosp_bed_capacity = hospbed,
ICU_bed_capacity = ucibed,
seeding_cases = 10
)
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "deaths", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = "D", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = c("E","IMild"), x_var = "date" , date_0 =d0)
mov <- read.csv("inputs/canmov_semanal.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101")
mov
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov <- rbind(data.frame(fecha=as.Date("2020-03-14"),ttmov = 0, redmov = 1), mov)
mov
