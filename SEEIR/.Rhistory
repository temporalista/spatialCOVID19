)
# 3 Matriz de contactos de España
cm3 <- get_mixing_matrix("Spain")
plot(cm3,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de España"
)
#selecciona una matriz y calcula la matriz simétrica utilizando el valor más alto de cada interacción
cms <- cm1
cm <- pmax(cms, t(cms))
cm
plot(cm,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos seleccionada (simétrica)"
)
cm
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
pop
pobc2020 <-pos.cue$canton_poblacion[1]
pobc2020
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
cm1 <- get_mixing_matrix("Ecuador")
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
pop
pobc2020 <-pos.cue$canton_poblacion[1]
pobcue <- as.integer(pop$n/sum(pop$n) * pobc2020)
pop
#poblacion de cuenca 2020
pob2020 <- read.csv("inputs/proy_pob_canton.csv")
pob2020
pobc2020 <- pob2020[pob2020$dpa_canton=="0101","p2020"]
pobc2020
pobcue <- as.integer(pop$n/sum(pop$n) * pobc2020)
pobcue
#capacidad hospitalaria
hospbed = 80
ucibed = 32
# fecha asumida de inicio, solamente para la representación gráfica
d0 <- as.Date("2020-03-14")
mb <- run_explicit_SEEIR_model(population = as.integer(pobcue),
contact_matrix_set = cm,
time_period = 90,
# R0=3,
# beta_set=0.1,
# replicates = 100,
day_return = T,
hosp_bed_capacity = hospbed,
ICU_bed_capacity = ucibed,
seeding_cases = 10
)
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "deaths", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = "D", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = c("E","IMild"), x_var = "date" , date_0 =d0)
mov <- read.csv("inputs/canmov_semanal.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101")
mov
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov <- rbind(data.frame(fecha=as.Date("2020-03-14"),ttmov = 0, redmov = 1), mov)
mov
popec <- get_population("Ecuador",simple_SEIR = F)
options(scipen=999)
# setwd("G:/My Drive/geo/Ecuador/covid19/SEEIR Cuenca/")
library(squire)
library(socialmixr)
library(plot.matrix)
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
popec <- get_population("Ecuador",simple_SEIR = F)
popec
d0 <- as.Date("2020/03/01")
get_mixing_matrix("Ecuador")
mec1 <- run_explicit_SEEIR_model(population = popec$n,
contact_matrix_set = cm2 <- get_mixing_matrix("Ecuador"),
time_period = 120,
# R0=3,
# beta_set=0.1,
# replicates = 100,
day_return = T,
seeding_cases = 10
)
mec1
plot(mec1,x_var = "date" , date_0 =d0 )
plot(mec1, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mec1, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mec1, var_select = c("deaths"), x_var = "date" , date_0 =d0, summarise = T)
plot(mec1, var_select = "D", x_var = "date" , date_0 =d0, summarise = T)
cm1 <- get_mixing_matrix("Ecuador")
plot(cm1,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de Ecuador",
sub="Datos del paquete 'squire'"
)
peru_survey <- readRDS("precomputed/peru.rds")
cmt <- contact_matrix(survey=peru_survey,
survey.pop="Peru",
age.limits = seq(0,80,5),
bootstrap=1000,
split = T,
symmetric=T,
)
cm2 <- (cmt$matrix)
colnames(cm2) <- cmt$participants$age.group
rownames(cm2) <- cmt$participants$age.group
plot(cm2,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos de Perú",
sub= "Grijalva et al. 2020, https://doi.org/10.5281/zenodo.1095664"
)
# 3 Matriz de contactos de España
cm3 <- get_mixing_matrix("Spain")
plot(cm3,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos por defecto de España"
)
#selecciona una matriz y calcula la matriz simétrica utilizando el valor más alto de cada interacción
cms <- cm1
cm <- pmax(cms, t(cms))
plot(cm,
fmt.cell='%.2f',
cex=0.7,
fmt.key ='%.2f',
breaks = range(0:2),
col=viridis::viridis(10),
main="Matriz de Contactos seleccionada (simétrica)"
)
pop <- get_population("Ecuador") #estructura poblacional de Ecuador en rangos de 5 años
pop
#poblacion de cuenca 2020
pob2020 <- read.csv("inputs/proy_pob_canton.csv")
pobc2020 <- pob2020[pob2020$dpa_canton=="0101","p2020"]
pobcue <- as.integer(pop$n/sum(pop$n) * pobc2020)
pobcue
pobc2020
#capacidad hospitalaria para COVID19 (datos del municipio de Cuenca)
hospbed = 80
ucibed = 32
# fecha asumida de inicio, solamente para la representación gráfica
d0 <- as.Date("2020-03-14")
mb <- run_explicit_SEEIR_model(population = as.integer(pobcue),
contact_matrix_set = cm,
time_period = 90,
# R0=3,
# beta_set=0.1,
# replicates = 100,
day_return = T,
hosp_bed_capacity = hospbed,
ICU_bed_capacity = ucibed,
seeding_cases = 10
)
plot(mb, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "E", x_var = "date" , date_0 =d0 )
plot(mb, var_select = "deaths", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = "D", x_var = "date" , date_0 =d0, summarise = T)
plot(mb, var_select = c("E","IMild"), x_var = "date" , date_0 =d0)
mov <- read.csv("inputs/canmov_semanal_mintel.csv",
colClasses = c("character","numeric","Date","numeric")) %>%
filter(dpa_canton=="0101") %>%
mutate(redmov=round(varimovw + 1,3),
ttmov = (fecha - d0)) %>%
select(ttmov,
fecha,
redmov)
mov <- rbind(data.frame(fecha=as.Date("2020-03-14"),ttmov = 0, redmov = 1), mov)
mov
ggplot(data=mov, aes(x=fecha, y=redmov))+
geom_line(aes(col="Reducción relativa"))+
geom_point(aes(y=redmov)) +
geom_text(aes(label=round(redmov,2),hjust=0, vjust=-1), size=3.5) +
stat_smooth(method = "lm",data = mov[-(1:8),],fullrange = F)+
labs(title="Variación de la movilidad", x="Fecha", y="Proporción relativa")  +
scale_x_date(date_breaks = "1 week",
date_labels = "%b %d",
date_minor_breaks = "1 week",
limits = c(as.Date("2020/03/14"),as.Date("2020/06/22"))) +
scale_y_continuous(breaks = seq(0,1,0.1)) +
theme(axis.text.x = element_text(angle = 90),
legend.position = "none"
)
#lista de matrices de interacción para cada nivel de reducción
# Se utiliza solamente 4 puntos en el tiempo
mov1 <- mov[c(1,3,6,9,14),]
mov1
cmset <- lapply(mov1$redmov, function(x) cm*x)
mov1$ttmov
ma <- run_explicit_SEEIR_model(population = pobcue,
dt = 1,
tt_contact_matrix = mov1$ttmov,
contact_matrix_set = cmset,
time_period = 350,
replicates = 20,
day_return = T
)
plot(ma, var_select = "infections", x_var = "date" , date_0 =d0 )
plot(ma, var_select = "E", x_var = "date" , date_0 =d0 )
plot(ma, var_select = "R", x_var = "date" , date_0 =d0 )
plot(ma, var_select = "D", x_var = "t" , date_0 =d0 )
d0
#casos positivos
positivos <- read.csv(file = "G:/My Drive/geo/Ecuador/covid19/andrab/cantones.inec.csv",
colClasses = c("character",
"character",
"numeric",
"character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"character"),
fileEncoding ="UTF8")
positivos
pos.cue <- positivos %>%
filter(inec_canton_id=="0101") %>%
mutate(fecha=as.Date(created_at, format="%d/%m/%y"))%>%
select(canton_id=inec_canton_id,
fecha,
casos=total)
#fallecimientos
falle <-read.csv("../municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
#fallecimientos
falle <-read.csv("G:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
#fallecimientos
falle <-read.csv("G:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#fallecimientos
falle <-read.csv("G:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle <-read.csv("G:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()
falle
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",)
falle
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)
falle
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y")
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y")
total_covid=confirmado_covid + sospecha_covid)
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y")
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)
falle
falle$fecha
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#fallecimientos
falle <-read.csv("g:/My Drive/geo/Ecuador/covid19/municipio_cuenca/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
falle
#fallecimientos
falle <-read.csv("inputs/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#dataframe de calibración
calib.df <- merge(falle, pos.cue, by.x = "fecha",by.y="fecha") %>%
select(date=fecha,
deaths=total_covid,
cases=casos)  %>%
mutate(deaths_cum =cumsum(deaths),
cases_cum =(cases))
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
#casos positivos
positivos <- read.csv(file = "inputs/cantones.inec.csv",
colClasses = c("character",
"character",
"numeric",
"character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"character"),
fileEncoding ="UTF8")
#casos positivos
positivos <- read.csv(file = "inputs/covid_positivos_canton2020-07-01.csv",
colClasses = c("character",
"character",
"numeric",
"character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"character"),
fileEncoding ="UTF8")
pos.cue <- positivos %>%
filter(inec_canton_id=="0101") %>%
mutate(fecha=as.Date(created_at, format="%d/%m/%y"))%>%
select(canton_id=inec_canton_id,
fecha,
casos=total)
#fallecimientos
falle <-read.csv("inputs/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#dataframe de calibración
calib.df <- merge(falle, pos.cue, by.x = "fecha",by.y="fecha") %>%
select(date=fecha,
deaths=total_covid,
cases=casos)  %>%
mutate(deaths_cum =cumsum(deaths),
cases_cum =(cases))
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
positivos
#casos positivos
positivos <- read.csv(file = "inputs/covid_positivos_canton2020-07-01.csv",
colClasses = c("character",
"character",
"numeric",
"character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"character"),
fileEncoding ="UTF8")
#casos positivos
positivos <- read.csv(file = "inputs/cantones.inec.csv",
colClasses = c("character",
"character",
"numeric",
"character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"character"),
fileEncoding ="UTF8")
pos.cue <- positivos %>%
filter(inec_canton_id=="0101") %>%
mutate(fecha=as.Date(created_at, format="%d/%m/%y"))%>%
select(canton_id=inec_canton_id,
fecha,
casos=total)
#fallecimientos
falle <-read.csv("inputs/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#dataframe de calibración
calib.df <- merge(falle, pos.cue, by.x = "fecha",by.y="fecha") %>%
select(date=fecha,
deaths=total_covid,
cases=casos)  %>%
mutate(deaths_cum =cumsum(deaths),
cases_cum =(cases))
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por el Municipio de Cuenca"
)
#fallecimientos
falle <-read.csv("inputs/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#fallecimientos
falle <-read.csv("inputs/fallecidos Cementerios.csv",) %>%
janitor::clean_names()%>%
select(fecha,confirmado_covid,sospecha_covid,no_covid)%>%
mutate(fecha=as.Date(falle$fecha,format="%d/%m/%y"),
total_covid=confirmado_covid + sospecha_covid)
falle
#dataframe de calibración
calib.df <- merge(falle, pos.cue, by.x = "fecha",by.y="fecha") %>%
select(date=fecha,
deaths=total_covid,
cases=casos)  %>%
mutate(deaths_cum =cumsum(deaths),
cases_cum =(cases))
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por David Acurio"
)
ggplot(calib.df, aes(x = date)) +
geom_line(aes(y=cases, col="Casos Diarios"))+
geom_point(aes(y=deaths, col="muertes")) +
labs(title="Datos de calibración", caption = "Los casos positivos provienen de las infografías del MSP, extraidos y proesados por Andrés Robalino. Los datos de fallecimientos fueron proporcionados por el Municipio de Cuenca"
)
